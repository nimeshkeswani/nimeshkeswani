{"version":3,"sources":["assets/images/github-sign-white.svg","assets/images/linkedin-sign-white.svg","assets/images/github-character.svg","assets/images/external-link-symbol.svg","components/Links.js","components/Project.js","components/Projects.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Links","react_default","a","createElement","className","href","target","src","github","alt","linkedin","Component","Project","_this$props","this","props","title","description","githubLink","externalLink","external","Projects","classNAme","components_Project","Home","react","components_Links","components_Projects","App","BrowserRouter","basename","process","components_Home","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,+DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,iECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,iXCoBzBC,0LAbb,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,mCAAmCC,OAAO,UAChDL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBG,IAAKC,IAAQC,IAAI,YAEpDR,EAAAC,EAAAC,cAAA,KAAGE,KAAK,6CAA6CC,OAAO,UAC1DL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBG,IAAKG,IAAUD,IAAI,sBAR1CE,oECuBLC,mLArBJ,IAAAC,EAEkDC,KAAKC,MAAtDC,EAFDH,EAECG,MAAOC,EAFRJ,EAEQI,YAAaC,EAFrBL,EAEqBK,WAAYC,EAFjCN,EAEiCM,aAE1C,OACClB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBAAiBY,GAC/Bf,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBAAuBa,GACpChB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,KAAGE,KAAMa,EAAYZ,OAAO,UAC1BL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAqBG,IAAKC,IAAQC,IAAI,YAEvDR,EAAAC,EAAAC,cAAA,KAAGE,KAAMc,EAAcb,OAAO,UAC5BL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAqBG,IAAKa,IAAUX,IAAI,uBAf7CE,aCkBPU,mLAjBb,OACCpB,EAAAC,EAAAC,cAAA,OAAKmB,UAAU,YACVrB,EAAAC,EAAAC,cAACoB,EAAD,CACEP,MAAM,oBACNC,YAAY,6CACZC,WAAW,oDACXC,aAAa,qDACflB,EAAAC,EAAAC,cAACoB,EAAD,CACEP,MAAM,WACNC,YAAY,kCACZC,WAAW,4CACXC,aAAa,qDAbAR,aCiBRa,mLAdb,OACCvB,EAAAC,EAAAC,cAACsB,EAAA,SAAD,KACCxB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eACjBH,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAACuB,EAAD,OAEDzB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aACdH,EAAAC,EAAAC,cAACwB,EAAD,eATahB,aCcJiB,mLAZX,OACE3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAQC,SAAUC,IAChB9B,EAAAC,EAAAC,cAACsB,EAAA,SAAD,KACExB,EAAAC,EAAAC,cAAC6B,EAAD,gBANMrB,aCOEsB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOtC,EAAAC,EAAAC,cAACqC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.9ea21415.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github-sign-white.09e9a056.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin-sign-white.405759e9.svg\";","module.exports = __webpack_public_path__ + \"static/media/github-character.b7658477.svg\";","module.exports = __webpack_public_path__ + \"static/media/external-link-symbol.ba01b73b.svg\";","import React, { Component } from 'react'\nimport github from '../assets/images/github-sign-white.svg'\nimport linkedin from '../assets/images/linkedin-sign-white.svg'\nimport '../styles/Links.css';\n\nclass Links extends Component {\n\trender () {\n\t\treturn (\n      <div className=\"Links\">\n        <a href=\"https://github.com/nimeshkeswani\" target=\"_blank\">\n          <img className=\"Link-icon-image\" src={github} alt=\"github\" />\n        </a>\n        <a href=\"https://www.linkedin.com/in/nimeshkeswani/\" target=\"_blank\">\n          <img className=\"Link-icon-image\" src={linkedin} alt=\"linkedin\" />\n        </a>\n      </div>\n\t\t)\n\t}\n}\n\nexport default Links\n","import React, { Component } from 'react'\nimport '../styles/Project.css'\nimport github from '../assets/images/github-character.svg'\nimport external from '../assets/images/external-link-symbol.svg'\n\nclass Project extends Component {\n\n\trender () {\n\n    const { title, description, githubLink, externalLink } = this.props\n\n\t\treturn (\n\t\t\t<div className='Project-main'>\n        <h5 className='Project-title'>{title}</h5>\n        <p className='Project-description'>{description}</p>\n        <div className='Project-links'>\n          <a href={githubLink} target=\"_blank\">\n            <img className='Project-icon-image' src={github} alt='github' />\n          </a>\n          <a href={externalLink} target=\"_blank\">\n            <img className='Project-icon-image' src={external} alt='external' />\n          </a>\n        </div>\n      </div>\n\t\t)\n\t}\n}\n\nexport default Project\n","import React, { Component } from 'react'\nimport '../styles/Projects.css'\nimport Project from './Project'\n\nclass Projects extends Component {\n\trender () {\n\t\treturn (\n\t\t\t<div classNAme='Projects'>\n        <Project\n          title='Would You Rather?'\n          description='A Would You Rather App using React & Redux'\n          githubLink='https://github.com/nimeshkeswani/would-you-rather'\n          externalLink='https://nimeshkeswani.github.io/would-you-rather' />\n        <Project\n          title='My Reads'\n          description='A Book Tracking App using React'\n          githubLink='https://github.com/nimeshkeswani/my-reads'\n          externalLink='https://nimeshkeswani.github.io/my-reads' />\n      </div>\n\t\t)\n\t}\n}\n\nexport default Projects\n","import React, { Component, Fragment } from 'react'\nimport Links from './Links'\nimport '../styles/Home.css'\nimport Projects from './Projects'\n\nclass Home extends Component {\n\trender () {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<header className=\"Home-header\">\n\t\t\t\t\t<text>Nimesh Keswani</text>\n\t\t\t\t\t<Links />\n        </header>\n\t\t\t\t<body className=\"Home-body\">\n\t\t\t\t\t\t<Projects />\n\t\t\t\t</body>\n      </Fragment>\n\t\t)\n\t}\n}\n\nexport default Home\n","import React, { Component, Fragment } from 'react'\nimport './App.css';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport Home from './components/Home'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className='App'>\n        <Router basename={process.env.PUBLIC_URL}>\n          <Fragment>\n            <Home />\n          </Fragment>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}